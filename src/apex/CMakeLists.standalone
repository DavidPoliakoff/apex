# Create a library called "Apex" which includes the source file "apex.cxx". 
# The extension is already found. Any number of sources could be listed here. 

#include_directories(${CMAKE_BINARY_DIR} ${APEX_SOURCE_DIR}/rapidjson/include)
include_directories(${PROJECT_BINARY_DIR}/src/apex ${APEX_SOURCE_DIR}/src/contrib)

if (TAU_FOUND)
SET(tau_SOURCE tau_listener.cpp)
endif(TAU_FOUND)

if (BFD_FOUND)
SET(bfd_SOURCE apex_bfd.cpp address_resolution.cpp)
endif(BFD_FOUND)

if (APEX_HAVE_PROC)
SET(PROC_SOURCE proc_read.cpp)
endif(APEX_HAVE_PROC)

if (OMPT_FOUND)
SET(OMPT_SOURCE apex_ompt.cpp)
endif(OMPT_FOUND)

if (USE_UDP_CLIENT)
SET(UDP_SOURCE udp_client.cpp)
endif(USE_UDP_CLIENT)

if (LM_SENSORS_FOUND)
SET(SENSOR_SOURCE sensor_data.cpp)
endif(LM_SENSORS_FOUND)

SET(all_SOURCE apex.cpp thread_instance.cpp event_listener.cpp handler.cpp concurrency_handler.cpp policy_handler.cpp ${tau_SOURCE} profiler_listener.cpp ${bfd_SOURCE} apex_options.cpp apex_policies.cpp ${PROC_SOURCE} ${OMPT_SOURCE} ${UDP_SOURCE} ${SENSOR_SOURCE})

add_library (apex_objlib OBJECT ${all_SOURCE})

add_library (apex SHARED $<TARGET_OBJECTS:apex_objlib>)
add_library (apex_static STATIC $<TARGET_OBJECTS:apex_objlib>)

set_target_properties(apex PROPERTIES OUTPUT_NAME apex)
set_target_properties(apex_static PROPERTIES OUTPUT_NAME apex)

target_link_libraries(apex ${LIBS})

# add the binary tree to the search path for include files
# so that we will find ApexConfig.h
if(HAVE_RCR)
include_directories("${PROJECT_BINARY_DIR}/src/apex" ${RCR_INCLUDE_PATH})
else()
include_directories("${PROJECT_BINARY_DIR}/src/apex")
endif()

INSTALL(FILES apex.h 
    apex_api.hpp
    apex_types.h
    apex_policies.h
    handler.hpp
    profile.hpp
    apex_export.h
    utils.hpp
    DESTINATION include)

#INSTALL(TARGETS apexShared apexStatic
INSTALL(TARGETS apex apex_static
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
)

