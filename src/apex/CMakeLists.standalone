# Create a library called "Apex" which includes the source file "apex.cxx". 
# The extension is already found. Any number of sources could be listed here. 

configure_file(
  ${CMAKE_SOURCE_DIR}/src/apex/apex_version.h.in
  ${CMAKE_BINARY_DIR}/apex_version.h
)

include_directories(${CMAKE_BINARY_DIR})

if (TAU_FOUND)
SET(tau_SOURCE tau_listener.cpp)
endif(TAU_FOUND)

if (BFD_FOUND)
SET(bfd_SOURCE apex_bfd.cpp address_resolution.cpp)
endif(BFD_FOUND)

if (APEX_HAVE_PROC)
SET(PROC_SOURCE proc_read.cpp)
endif(APEX_HAVE_PROC)

if (OMPT_FOUND)
SET(OMPT_SOURCE apex_ompt.cpp)
endif(OMPT_FOUND)

SET(all_SOURCE apex.cpp thread_instance.cpp event_listener.cpp handler.cpp concurrency_handler.cpp policy_handler.cpp ${tau_SOURCE} profiler_listener.cpp ${bfd_SOURCE} apex_options.cpp apex_policies.cpp ${PROC_SOURCE} ${OMPT_SOURCE})

#add_library (apexStatic STATIC ${all_SOURCE})
#add_library (apexShared SHARED ${all_SOURCE})
add_library (apex ${all_SOURCE})

#set_target_properties(apexStatic PROPERTIES OUTPUT_NAME apex)
#set_target_properties(apexShared PROPERTIES OUTPUT_NAME apex)
set_target_properties(apex PROPERTIES OUTPUT_NAME apex)

#target_link_libraries(apexStatic ${LIBS} ${Boost_LIBRARIES})
#target_link_libraries(apexShared ${LIBS} ${Boost_LIBRARIES})
target_link_libraries(apex ${LIBS} ${Boost_LIBRARIES})


# add the binary tree to the search path for include files
# so that we will find ApexConfig.h
if(HAVE_RCR)
include_directories("${PROJECT_BINARY_DIR}/src/apex" ${RCR_INCLUDE_PATH})
else()
include_directories("${PROJECT_BINARY_DIR}/src/apex")
endif()

INSTALL(FILES apex.h apex.hpp apex_types.h apex_policies.h handler.hpp event_listener.hpp apex_export.h DESTINATION include)

#INSTALL(TARGETS apexShared apexStatic
INSTALL(TARGETS apex
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
)

